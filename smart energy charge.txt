#include <WiFi.h>
#include <PubSubClient.h>
#include <PZEM004Tv30.h>

///#define led 26

// WiFi credentials
const char* ssid = "vivo V40";
const char* password = "12345678";

// ThingsBoard credentials
const char* thingsboardServer = "demo.thingsboard.io";
const char* accessToken = "bnmELfbT4hTEamCAVb2S";     
                        
// PZEM configuration
#define PZEM_RX_PIN 17
#define PZEM_TX_PIN 16
HardwareSerial PZEMSerial(2); // Use UART2 for communication
PZEM004Tv30 pzem(PZEMSerial, PZEM_RX_PIN, PZEM_TX_PIN);

WiFiClient wifiClient;
PubSubClient client(wifiClient);

// Timer for 15-minute interval
unsigned long previousMillis = 0;
const unsigned long interval = 1 * 60 * 1000; // 15 minutes in milliseconds

void connectToWiFi() {
  Serial.print("Connecting to WiFi...");
 WiFi.begin(ssid, password);

 //WiFi.begin(ssid);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("Connected to WiFi!");
}

void connectToThingsBoard() {
  while (!client.connected()) {
    Serial.print("Connecting to ThingsBoard...");
    if (client.connect("ESP32", accessToken, NULL)) {
      Serial.println("Connected to ThingsBoard!");
    } else {
      Serial.print("Failed, rc=");
      Serial.print(client.state());
      Serial.println(" Trying again in 5 seconds...");
      delay(5000);
    }
  }
}

void setup() {
  //pinMode(led, OUTPUT);
  //digitalWrite(led, HIGH);
  Serial.begin(115200);

  // Initialize PZEM communication
  PZEMSerial.begin(9600, SERIAL_8N1, PZEM_RX_PIN, PZEM_TX_PIN);

  connectToWiFi();
  client.setServer(thingsboardServer, 1883);
  pzem.resetEnergy();
}

void loop() {
  if (!client.connected()) {
    connectToThingsBoard();
  }
  client.loop();

  // Read data from PZEM continuously
  float voltage = pzem.voltage();
  float current = pzem.current();
  float power = pzem.power();
  float energy = pzem.energy()*1000;
  float frequency = pzem.frequency();
  float pf = pzem.pf();

  // Print data to Serial Monitor
  Serial.println("PZEM Data (Continuous):");
  Serial.print("Voltage: "); Serial.println(voltage);
  Serial.print("Current: "); Serial.println(current);
  Serial.print("Power: "); Serial.println(power);
  Serial.print("Energy: "); Serial.println(energy);
  Serial.print("Frequency: "); Serial.println(frequency);
  Serial.print("Power Factor: "); Serial.println(pf);

  // Check if 15 minutes have passed for sending data
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    // Prepare JSON payload
    String payload = "{";
    payload += "\"voltage\":" + String(voltage) + ",";
    payload += "\"current\":" + String(current) + ",";
    payload += "\"power\":" + String(power) + ",";
    payload += "\"energy\":" + String(energy) + ",";
    payload += "\"frequency\":" + String(frequency) + ",";
    payload += "\"power_factor\":" + String(pf);
    payload += "}";

    // Publish data to ThingsBoard
    client.publish("v1/devices/me/telemetry", payload.c_str());
    Serial.println("Data sent to ThingsBoard.");
  }

  // Wait briefly to avoid flooding the Serial Monitor
  delay(1000);
}

